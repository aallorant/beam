---
title: "Collecting data to tell your own stories"
subtitle: "History and practice of surveys"
format: 
  revealjs:
    theme: sky
    slide-number: true
    transition: fade
    background-transition: slide
highlight-style: a11y
execute:
  code-link: true
  echo: true
editor_options: 
  chunk_output_type: console
css: styles.css
---


```{r}
#| echo: false
# Load packages
library(tidyverse)
library(readxl)
library(knitr)
library(ggthemes)

# Set theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))

# Set width of code output
options(width = 65)

# Set figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 7, # 7" width
  fig.asp = 0.618, # the golden ratio
  fig.retina = 3, # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 300 # higher dpi, sharper image
)

```

# History of Data Collection in the US

## The Census and the US population

```{r}
#| echo: false
# Load population data
pop_us <- read_csv("data/pop_us.csv")


# Create time-series plot
pop_plot <- ggplot(pop_us, aes(x = Year, y = Population)) +
  geom_line(color = "steelblue", size = 1) +
  geom_point(size = 2) +
  scale_y_continuous(labels = scales::comma) +
  labs(
    title = "Population of the United States (1790-2020)",
    subtitle = "Data from the Decennial Census",
    x = "Year",
    y = "Population",
    caption = "Source: US Census Bureau"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    plot.subtitle = element_text(size = 14, hjust = 0.5),
    plot.caption = element_text(size = 12, hjust = 1),
    axis.title.x = element_text(face = "bold"),
    axis.title.y = element_text(face = "bold"),
    axis.text = element_text(size = 12)
  )

pop_plot

```

## The Census and the US population

```{r}
#| echo: false
# Load population data
# Load necessary library
library(tidyverse)

# Create the data frame
race_ethnicity <- tibble::tribble(
  ~RaceEthnicity, ~Percentage,
  "White alone non-Hispanic", "57.8%",
  "Hispanic or Latino", "18.7%",
  "Black or African American alone", "12.1%",
  "Asian alone", "5.9%",
  "Two or more races", "2.7%",
  "American Indian and Alaska Native alone", "0.9%",
  "Native Hawaiian and Other Pacific Islander alone", "0.2%",
  "Other race alone", "1.3%"
)

# Convert percentage to numeric
race_ethnicity <- race_ethnicity %>%
  mutate(Percentage = as.numeric(str_replace(Percentage, "%", "")))

pie_chart <- ggplot(race_ethnicity, aes(x = "", y = Percentage, fill = RaceEthnicity)) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar("y") +
  labs(
    title = "Race/Ethnicity Distribution in the US"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5, color = "#4682b4"),
    axis.title = element_blank(),
    axis.text = element_blank(),
    panel.grid = element_blank(),
    plot.background = element_blank(),
    legend.title = element_blank(),
    legend.text = element_text(size = 12, color = "#333333")
  ) +
  scale_fill_brewer(palette = "Set3") +
  geom_text(aes(label = paste0(Percentage, "%")), position = position_stack(vjust = 0.5), color = "black")

# Display pie chart
print(pie_chart)

```

## The Census and the US population

::: incremental
- The US Census
  + A constitutional right
  + Assess every 10 years the equilibrium between each US State and their number of representatives at the Congress

- How?
  + Census Bureau

- Which indicators?
  + **Age/sex**
  + **Income**
  + **Education**

- Why these indicators?
:::


## The Creation of the Census Bureau

- Responsible for collecting data on the US population and economy
- Publishes various surveys and reports beyond the Decennial Census

# Critical Approaches to Quantification

## Quantitative Critical (QuantCrit) Research

### Data and Methods are Not Neutral
- Biases in data collection and analysis
- Structural racism and sexism affect data collection

### Groups are Neither Natural nor Inherent
- Identities are socially constructed and fluid
- Identity is multifaceted

### Valuing Narrative and Counter-Narrative
- Importance of lived experiences and counter-narratives
- Importance of data proficiency to tell your own stories

# Survey data

## Example: the Happiness Survey

```{r}
#| echo: false
# Install and load necessary libraries
library(rvest)
library(tidyverse)
library(PNWColors)
# URL of the Wikipedia page
url <- 'https://en.wikipedia.org/wiki/World_Happiness_Report'

# Read the HTML content from the Wikipedia page
webpage <- read_html(url)

# Extract all tables from the webpage
tables <- webpage %>%
  html_nodes("table")

# Initialize a list to store data frames
df_list <- list()

# Loop through each table and check if it is a ranking table
for (i in 1:length(tables)) {
  table <- tables[[i]] %>%
    html_table(fill = TRUE) %>%
    as.data.frame()
  
  # Check if the table has the relevant columns
  if (any(grepl("Country|Country or region", names(table), ignore.case = TRUE)) &
      any(grepl("Score|Happiness score|Cantril ladder score|Happiness.Score", names(table), ignore.case = TRUE))) {
    df_list[[length(df_list) + 1]] <- table
  }
}
df_list <- df_list[1:3]

# Combine all the data into one dataframe
happiness_data <- bind_rows(df_list, .id = "Year")
# Clean and rename columns
happiness_data <- happiness_data %>%
  select(Country = matches("Country|Country or region|Nation|Country/Region"),
         Score,
         Year) %>%
  filter(!is.na(Score))

# Select countries of interest
selected_countries <- c("United States", "Canada", "Mexico", "Finland", "Afghanistan")

# Filter the data for the selected countries
happiness_selected <- happiness_data %>%
  filter(Country %in% selected_countries) %>%
  select(Country, Score, Year)
# Change Year labels to 2015, 2020, 2024
happiness_selected <- happiness_selected %>%
  mutate(Year = recode(Year, `3` = 2015, `2` = 2020, `1` = 2024))

# Create a time-series plot
happiness_time_series <- ggplot(happiness_selected, aes(x = Year, y = Score, color = Country, group = Country)) +
  geom_line(size = 1.2) +
  geom_point(size = 2) +
  scale_color_manual(values = pnw_palette("Sailboat", n = 5, type = "discrete")) +
  scale_x_continuous(breaks = c(2015, 2020, 2024)) +
  labs(
    title = "Happiness Scores",
    x = "Year",
    y = "Happiness Score",
    color = "Country"
  ) + ylim(0, 10) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5, color = "#4682b4"),
    axis.title.x = element_text(face = "bold", color = "#4682b4"),
    axis.title.y = element_text(face = "bold", color = "#4682b4"),
    axis.text = element_text(size = 12, color = "#333333"),
    legend.title = element_text(face = "bold", color = "#4682b4")
  )

# Display the plot
print(happiness_time_series)

```

## Example: the Happiness Survey

```{r}
#| echo: false
library(ggrepel)
# Combine all the data into one dataframe
happiness_data <- bind_rows(df_list, .id = "Year")
# Clean and rename columns
happiness_data <- happiness_data %>%
  select(Country = matches("Country|Country or region|Nation|Country/Region"),
         Score,
         `GDP per capita`,
         Year) %>%
  filter(!is.na(Score) & !is.na(`GDP per capita`))

# Change Year labels to 2015, 2020, 2024
happiness_data <- happiness_data %>%
  mutate(Year = recode(Year, `1` = 2015, `2` = 2020, `3` = 2024))

# Filter the data for the first year (2015)
happiness_2015 <- happiness_data %>%
  filter(Year == 2024)

scatterplot <- ggplot(happiness_2015, aes(x = 40000*`GDP per capita`, y = Score, label = Country)) +
  geom_point(size = 3, color = pnw_palette("Sailboat", n = 1)) +
  geom_text_repel(size = 3) +
  labs(
    title = "Happiness Score vs GDP per Capita (2015)",
    x = "GDP per Capita",
    y = "Happiness Score"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5, color = "#4682b4"),
    axis.title.x = element_text(face = "bold", color = "#4682b4"),
    axis.title.y = element_text(face = "bold", color = "#4682b4"),
    axis.text = element_text(size = 12, color = "#333333"),
    legend.title = element_text(face = "bold", color = "#4682b4")
  )
# Display the plot
print(scatterplot)
```


## Principles for survey design

1. Objective(s): **Why**
2. Target population: **Who**
3. Questions: **What**
4. Method of data collection: **How**

